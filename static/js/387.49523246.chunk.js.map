{"version":3,"file":"static/js/387.49523246.chunk.js","mappings":"qUAGMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QADY,8BAGL,IAAMC,EAAS,mCAAG,+GAEAD,EAAAA,EAAAA,IAAA,uCACaD,EADb,oBAFA,cAEfG,EAFe,gBAKFA,EAAOC,KALL,cAKfA,EALe,yBAMdA,GANc,kCAQrBC,QAAQC,MAAR,MARqB,0DAAH,qDAYTC,EAAW,mCAAG,WAAMC,GAAN,kGAEFP,EAAAA,EAAAA,IAAA,+BACKO,EADL,oBACyBR,EADzB,oBAFE,cAEjBG,EAFiB,gBAKJA,EAAOC,KALH,cAKjBA,EALiB,yBAMhBA,GANgB,kCAQvBC,QAAQC,MAAR,MARuB,0DAAH,sDAYXG,EAAS,mCAAG,WAAMC,GAAN,kGAEAT,EAAAA,EAAAA,IAAA,kBACRS,EADQ,oBACcV,EADd,oBAFA,cAEfG,EAFe,gBAKFA,EAAOC,KALL,cAKfA,EALe,yBAMdA,GANc,kCAQrBC,QAAQC,MAAR,MARqB,0DAAH,sDAYTK,EAAS,mCAAG,WAAMC,GAAN,kGAEAX,EAAAA,EAAAA,IAAA,kBACRW,EADQ,4BACwBZ,EADxB,oBAFA,cAEfG,EAFe,gBAKFA,EAAOC,KALL,cAKfA,EALe,yBAMdA,GANc,kCAQrBC,QAAQC,MAAR,MARqB,0DAAH,sDAYTO,EAAY,mCAAG,WAAMC,GAAN,kGAEHb,EAAAA,EAAAA,IAAA,kBACRa,EADQ,4BAC2Bd,EAD3B,oBAFG,cAElBG,EAFkB,gBAKLA,EAAOC,KALF,cAKlBA,EALkB,yBAMjBA,GANiB,kCAQxBC,QAAQC,MAAR,MARwB,0DAAH,sDAYzBC,EAAYQ,UAAY,CACtBP,SAAUQ,IAAAA,QAGZP,EAAUM,UAAY,CACpBL,WAAYM,IAAAA,QAGdL,EAAUI,UAAY,CACpBH,aAAcI,IAAAA,QAGhBH,EAAaE,UAAY,CACvBD,gBAAiBE,IAAAA,O,0IC9ENC,EAAOC,EAAAA,EAAAA,GAAH,4EAMJC,EAAgBD,EAAAA,EAAAA,IAAH,6CAIbE,EAAOF,EAAAA,EAAAA,GAAH,4KAMJG,EAAIH,EAAAA,EAAAA,EAAH,0F,SC+Bd,EA3Ca,WACX,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAASC,EAAAA,EAAAA,MACf,GAA6BJ,EAAAA,EAAAA,WAAS,GAAtC,eAAOK,EAAP,KAAeC,EAAf,KAgBA,OAbAC,EAAAA,EAAAA,YAAU,WACR,KACElB,EAAAA,EAAAA,IAAUc,EAAOK,QAAQC,MAAK,SAAAC,GAC5B,GAA6B,IAAzBA,EAAST,KAAKU,OAChB,OAAOL,GAAW,GAEpBJ,EAAQQ,EAAST,KAClB,GAGF,CAFC,MAAOjB,GACPD,QAAQ6B,IAAI5B,EACb,CACF,GAAE,CAACmB,EAAOK,UAGT,UAACX,EAAD,WACGQ,IAAU,uBAAG,aACd,SAACV,EAAD,UACGM,GACCA,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAArB,OACP,UAAClB,EAAD,YACE,gBACEmB,IACEF,EACIA,GAzBL,kCAyB8BA,EACzB,6CAENG,IAAKF,EACLG,MAAO,OAET,SAACpB,EAAD,UAAIiB,MAVKF,EADJ,QAiBlB,C","sources":["components/Api/Api.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = '5f2a66e63fa9a8139a0b7e8b9aba27ca';\nconst URL = 'https://api.themoviedb.org/';\naxios.defaults.baseURL = URL;\n\nexport const GetMovies = async () => {\n  try {\n    const server = await axios.get(\n      `3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const SearchMovie = async onSubmit => {\n  try {\n    const server = await axios.get(\n      `3/search/movie?query=${onSubmit}&api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieInfo = async onSubmitId => {\n  try {\n    const server = await axios.get(\n      `3/movie/${onSubmitId}?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieCast = async onSubmitCast => {\n  try {\n    const server = await axios.get(\n      `3/movie/${onSubmitCast}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieReviews = async onSubmitReviews => {\n  try {\n    const server = await axios.get(\n      `3/movie/${onSubmitReviews}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nSearchMovie.propTypes = {\n  onSubmit: PropTypes.string,\n};\n\nMovieInfo.propTypes = {\n  onSubmitId: PropTypes.string,\n};\n\nMovieCast.propTypes = {\n  onSubmitCast: PropTypes.string,\n};\n\nMovieReviews.propTypes = {\n  onSubmitReviews: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const CastContainer = styled.div`\n  max-width: 700px;\n`;\n\nexport const Item = styled.li`\n  width: 200px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const P = styled.p`\n  font-size: larger;\n  text-align: center;\n  font-weight: 500;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport  {MovieCast}  from '../Api/Api';\nimport { List, CastContainer, P, Item } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const params = useParams();\n  const [result, setReesult] = useState(false);\n  const imgURL = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    try {\n      MovieCast(params.filmId).then(response => {\n        if (response.cast.length === 0) {\n          return setReesult(true);\n        }\n        setCast(response.cast);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [params.filmId]);\n\n  return (\n    <CastContainer>\n      {result && <p>No cast</p>}\n      <List>\n        {cast &&\n          cast.map(({ id, profile_path, name }) => (\n            <Item key={id}>\n              <img\n                src={\n                  profile_path\n                    ? profile_path && imgURL + profile_path\n                    : 'https://svgsilh.com/svg/1287911-4f4f4f.svg'\n                }\n                alt={name}\n                width={200}\n              />\n              <P>{name}</P>\n            </Item>\n          ))}\n      </List>\n    </CastContainer>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","axios","GetMovies","server","data","console","error","SearchMovie","onSubmit","MovieInfo","onSubmitId","MovieCast","onSubmitCast","MovieReviews","onSubmitReviews","propTypes","PropTypes","List","styled","CastContainer","Item","P","useState","cast","setCast","params","useParams","result","setReesult","useEffect","filmId","then","response","length","log","map","id","profile_path","name","src","alt","width"],"sourceRoot":""}