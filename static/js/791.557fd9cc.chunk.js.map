{"version":3,"file":"static/js/791.557fd9cc.chunk.js","mappings":"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","sources":["Pages/MovieDetails.styled.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","Pages/MovieDetails.jsx","components/Api/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const GoBack = styled(Link)`\n  text-decoration: none;\n  font-size: larger;\n  font-weight: 700;\n  color: #6a6a6a;\n  &:hover {\n    color: black;\n  }\n`;\n\nexport const Cast = styled(NavLink)`\n  text-decoration: none;\n  font-size: larger;\n  font-weight: 700;\n  color: #6a6a6a;\n  margin: 0 40px;\n  &:hover {\n    color: black;\n  }\n  &.active {\n    color: orangered;\n  }\n`;\n\nexport const Review = styled(NavLink)`\n  text-decoration: none;\n  font-size: larger;\n  font-weight: 700;\n  color: #6a6a6a;\n  &:hover {\n    color: black;\n  }\n  &.active {\n    color: orangered;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n`;\n","import styled from '@emotion/styled';\n\nexport const TCont = styled.div`\n  display: flex;\n`;\n\nexport const Container = styled.div`\n  padding: 0 80px;\n`;\n\nexport const Img = styled.img`\n  margin-right: 50px;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin: 20px 0;\n  color: #3a3b3b;\n`;\n\nexport const Rating = styled.p`\n  font-size: larger;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\nexport const Span = styled.span`\n  font-size: larger;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const GenresList = styled.ul`\n  margin-bottom: 10px;\n  font-size: larger;\n  font-weight: 700;\n  color: #4e4e4e;\n`;\n\nexport const Overview = styled.h2`\n  margin-bottom: 10px;\n`;\nexport const OverviewText = styled.p`\n  margin-bottom: 10px;\n  font-size: larger;\n  font-weight: 700;\n  color: #4e4e4e;\n`;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  Container,\n  TCont,\n  Img,\n  Title,\n  Rating,\n  Span,\n  GenresList,\n  Overview,\n  OverviewText,\n} from './MovieCard.styled';\nimport Loader from '../Loader/Loader';\n\nconst MovieCard = card => {\n  const imgURL = 'https://image.tmdb.org/t/p/w500';\n  const { poster_path, title, vote_average, overview, genres } = card.card;\n\n  return (\n    <Container>\n      <TCont>\n        <div>\n          <Img\n            src={poster_path && imgURL + poster_path}\n            alt={title}\n            width={400}\n          />\n        </div>\n        <div>\n          <Title>{title}</Title>\n          <Rating>Rating:{vote_average}</Rating>\n          <Span>Genres:</Span>\n          <GenresList>\n            {genres &&\n              genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n          </GenresList>\n          <Overview>Overview</Overview>\n          <OverviewText>{overview}</OverviewText>\n          <div>\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </div>\n      </TCont>\n    </Container>\n  );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  card: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n","import { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\n\nimport { GoBack, List, Cast, Review } from './MovieDetails.styled';\nimport  {MovieInfo}  from '../components/Api/Api';\nimport MovieCard from '../components/MovieCard/MovieCard';\n\nconst FilmInfo = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  const [filmId, setFilmId] = useState('');\n  const params = useParams();\n\n  useEffect(() => {\n    try {\n      MovieInfo(params.filmId).then(response => {\n        setFilmId(response);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [params.filmId]);\n\n  return (\n    <div>\n      <List>\n        <li>\n          <GoBack to={backLinkHref}>Go back</GoBack>\n        </li>\n        <li>\n          <Cast to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </Cast>\n        </li>\n        <li>\n          <Review to=\"reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </Review>\n        </li>\n      </List>\n      <MovieCard card={filmId} />\n    </div>\n  );\n};\n\nexport default FilmInfo;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = '5f2a66e63fa9a8139a0b7e8b9aba27ca';\nconst URL = 'https://api.themoviedb.org/';\naxios.defaults.baseURL = URL;\n\nexport const GetMovies = async () => {\n  try {\n    const server = await axios.get(\n      `3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const SearchMovie = async onSubmit => {\n  try {\n    const server = await axios.get(\n      `3/search/movie?query=${onSubmit}&api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieInfo = async onSubmitId => {\n  try {\n    const server = await axios.get(\n      `3/movie/${onSubmitId}?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieCast = async onSubmitCast => {\n  try {\n    const server = await axios.get(\n      `3/movie/${onSubmitCast}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieReviews = async onSubmitReviews => {\n  try {\n    const server = await axios.get(\n      `3/movie/${onSubmitReviews}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nSearchMovie.propTypes = {\n  onSubmit: PropTypes.string,\n};\n\nMovieInfo.propTypes = {\n  onSubmitId: PropTypes.string,\n};\n\nMovieCast.propTypes = {\n  onSubmitCast: PropTypes.string,\n};\n\nMovieReviews.propTypes = {\n  onSubmitReviews: PropTypes.string,\n};\n"],"names":["GoBack","styled","Link","Cast","NavLink","Review","List","TCont","Container","Img","Title","Rating","Span","GenresList","Overview","OverviewText","card","poster_path","title","vote_average","overview","genres","src","alt","width","map","genre","name","id","Suspense","fallback","Loader","backLinkHref","useLocation","state","from","useState","filmId","setFilmId","params","useParams","useEffect","MovieInfo","then","response","error","console","log","to","API_KEY","axios","GetMovies","server","data","SearchMovie","onSubmit","onSubmitId","MovieCast","onSubmitCast","MovieReviews","onSubmitReviews","propTypes","PropTypes"],"sourceRoot":""}