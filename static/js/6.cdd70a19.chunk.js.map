{"version":3,"file":"static/js/6.cdd70a19.chunk.js","mappings":"gMAwBA,UAnBa,WACX,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,MAAYC,MAAK,SAAAC,GACfJ,EAAeI,EAASC,QACzB,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,KAGD,0BACE,SAAC,IAAD,CAAUG,YAAaV,KAG5B,C,qNCpBKW,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QADY,8BAGL,IAAMT,EAAS,mCAAG,+GAEAS,EAAAA,EAAAA,IAAA,uCACaD,EADb,oBAFA,cAEfE,EAFe,gBAKFA,EAAOC,KALL,cAKfA,EALe,yBAMdA,GANc,kCAQrBN,QAAQD,MAAR,MARqB,0DAAH,qDAYTQ,EAAW,mCAAG,WAAMC,GAAN,kGAEFJ,EAAAA,EAAAA,IAAA,+BACKI,EADL,oBACyBL,EADzB,oBAFE,cAEjBE,EAFiB,gBAKJA,EAAOC,KALH,cAKjBA,EALiB,yBAMhBA,GANgB,kCAQvBN,QAAQD,MAAR,MARuB,0DAAH,sDAYXU,EAAS,mCAAG,WAAMC,GAAN,kGAEAN,EAAAA,EAAAA,IAAA,kBACRM,EADQ,oBACcP,EADd,oBAFA,cAEfE,EAFe,gBAKFA,EAAOC,KALL,cAKfA,EALe,yBAMdA,GANc,kCAQrBN,QAAQD,MAAR,MARqB,0DAAH,sDAYTY,EAAS,mCAAG,WAAMC,GAAN,kGAEAR,EAAAA,EAAAA,IAAA,kBACRQ,EADQ,4BACwBT,EADxB,oBAFA,cAEfE,EAFe,gBAKFA,EAAOC,KALL,cAKfA,EALe,yBAMdA,GANc,kCAQrBN,QAAQD,MAAR,MARqB,0DAAH,sDAYTc,EAAY,mCAAG,WAAMC,GAAN,kGAEHV,EAAAA,EAAAA,IAAA,kBACRU,EADQ,4BAC2BX,EAD3B,oBAFG,cAElBE,EAFkB,gBAKLA,EAAOC,KALF,cAKlBA,EALkB,yBAMjBA,GANiB,kCAQxBN,QAAQD,MAAR,MARwB,0DAAH,sDAYzBQ,EAAYQ,UAAY,CACtBP,SAAUQ,IAAAA,QAGZP,EAAUM,UAAY,CACpBL,WAAYM,IAAAA,QAGdL,EAAUI,UAAY,CACpBH,aAAcI,IAAAA,QAGhBH,EAAaE,UAAY,CACvBD,gBAAiBE,IAAAA,O,8GC7ENC,EAAOC,EAAAA,EAAAA,GAAH,yHAQJC,GAAID,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,yJAODG,EAAOH,EAAAA,EAAAA,GAAH,0lBAeJI,EAAMJ,EAAAA,EAAAA,IAAH,2CAIHK,EAAIL,EAAAA,EAAAA,EAAH,uFAMDM,EAAYN,EAAAA,EAAAA,IAAH,+J,SCRtB,EA9BiB,SAAAhB,GACf,IAAMuB,GAAWC,EAAAA,EAAAA,MAEXC,EAASzB,EAAYA,YAE3B,OACE,SAACe,EAAD,UACGU,GACCA,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACT,SAACV,EAAD,WACE,UAACF,EAAD,CAAGa,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMT,GAAvC,WACE,SAACH,EAAD,CACEa,IACEL,EACIA,GAZL,kCAY6BA,EACxB,2CAENM,IAAKL,EACLM,MAAO,OAET,SAACb,EAAD,WACE,SAACD,EAAD,UAAIQ,UAZCF,EADF,KAoBlB,C","sources":["Pages/Home.jsx","components/Api/Api.jsx","components/CardList/CardList.styled.js","components/CardList/CardList.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport  {GetMovies}  from '../components/Api/Api';\nimport CardList from '../components/CardList/CardList';\n\nconst Home = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n\n  useEffect(() => {\n    try {\n      GetMovies().then(response => {\n        setTrendMovies(response.results);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  return (\n    <div>\n      <CardList searchValue={trendMovies} />\n    </div>\n  );\n};\nexport default Home;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = '5f2a66e63fa9a8139a0b7e8b9aba27ca';\nconst URL = 'https://api.themoviedb.org/';\naxios.defaults.baseURL = URL;\n\nexport const GetMovies = async () => {\n  try {\n    const server = await axios.get(\n      `3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const SearchMovie = async onSubmit => {\n  try {\n    const server = await axios.get(\n      `3/search/movie?query=${onSubmit}&api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieInfo = async onSubmitId => {\n  try {\n    const server = await axios.get(\n      `3/movie/${onSubmitId}?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieCast = async onSubmitCast => {\n  try {\n    const server = await axios.get(\n      `3/movie/${onSubmitCast}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const MovieReviews = async onSubmitReviews => {\n  try {\n    const server = await axios.get(\n      `3/movie/${onSubmitReviews}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nSearchMovie.propTypes = {\n  onSubmit: PropTypes.string,\n};\n\nMovieInfo.propTypes = {\n  onSubmitId: PropTypes.string,\n};\n\nMovieCast.propTypes = {\n  onSubmitCast: PropTypes.string,\n};\n\nMovieReviews.propTypes = {\n  onSubmitReviews: PropTypes.string,\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const A = styled(Link)`\n  text-decoration: none;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n`;\n\nexport const Item = styled.li`\n  width: 300px;\n  margin-right: auto;\n  margin-left: auto;\n//   border: 1px solid black;\n  margin-bottom: 20px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n      transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n      border-radius: 5px;\n  &:hover {\n    transform: scale(1.03);\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n    \n`;\nexport const Img = styled.img`\n  display: block;\n`;\n\nexport const P = styled.p`\n  font-size: x-large;\n  font-weight: 700;\n  color: #656565;\n`;\n\nexport const Container = styled.div`\n  height: 70px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 15px;\n  background-color: #f9f7f7;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { List, Item, A, Img, P, Container } from './CardList.styled';\n\nconst CardList = searchValue => {\n  const location = useLocation();\n  const imgURL = 'https://image.tmdb.org/t/p/w500';\n  const search = searchValue.searchValue;\n\n  return (\n    <List>\n      {search &&\n        search.map(({ id, poster_path, title }) => (\n          <Item key={id}>\n            <A to={`/movies/${id}`} state={{ from: location }}>\n              <Img\n                src={\n                  poster_path\n                    ? poster_path && imgURL + poster_path\n                    : 'https://svgsilh.com/svg/24530-4f4f4f.svg'\n                }\n                alt={title}\n                width={300}\n              />\n              <Container>\n                <P>{title}</P>\n              </Container>\n            </A>\n          </Item>\n        ))}\n    </List>\n  );\n};\n\nexport default CardList;\n\nCardList.propTypes = {\n  searchValue: PropTypes.array,\n};\n"],"names":["useState","trendMovies","setTrendMovies","useEffect","GetMovies","then","response","results","error","console","log","searchValue","API_KEY","axios","server","data","SearchMovie","onSubmit","MovieInfo","onSubmitId","MovieCast","onSubmitCast","MovieReviews","onSubmitReviews","propTypes","PropTypes","List","styled","A","Link","Item","Img","P","Container","location","useLocation","search","map","id","poster_path","title","to","state","from","src","alt","width"],"sourceRoot":""}